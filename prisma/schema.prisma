generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum UserRole {
  PERSONAL
  BUSINESS
  ADMIN
}

model User {
  id             String        @id @default(auto()) @map("_id") @db.ObjectId
  email          String        @unique
  password       String
  name           String
  isPremium      Boolean       @default(false)
  role           UserRole      @default(PERSONAL)
  team           Team?         @relation(fields: [teamId], references: [id])
  organization   Organization? @relation(fields: [organizationId], references: [id])
  files          File[]        @relation("UserToFile")
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  teamId         String?       @db.ObjectId
  organizationId String?       @db.ObjectId
}

model File {
  id             String        @id @default(auto()) @map("_id") @db.ObjectId
  name           String
  content        Json?
  whiteboard     Json?
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  user           User          @relation("UserToFile", fields: [userId], references: [id])
  team           Team?         @relation(fields: [teamId], references: [id])
  organization   Organization? @relation(fields: [organizationId], references: [id]) // Add this line
  userId         String        @db.ObjectId
  teamId         String?       @db.ObjectId
  organizationId String?       @db.ObjectId
  createdBy      String?       @db.ObjectId
}

model Organization {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  email     String   @unique
  phone     String   @unique
  address   String
  city      String
  state     String
  country   String
  website   String
  users     User[]
  files     File[] // Consider if necessary
  teams     Team[]
  fileCount Int      @default(0)
  teamCount Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  createdBy String?  @db.ObjectId
}

model Team {
  id             String        @id @default(auto()) @map("_id") @db.ObjectId
  name           String
  description    String
  organizationId String        @db.ObjectId
  organization   Organization? @relation(fields: [organizationId], references: [id])
  users          User[]
  files          File[]
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  createdBy      Json
}
